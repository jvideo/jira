type: install
appVersion: latest
id: jira-software
name: Jira Project & Issue Tracking System
logo: /images/jira-logo-small.svg
baseUrl: https://raw.githubusercontent.com/vlobzakov/jira/master

categories:
- apps/dev-and-admin-tools

description:
  text: JIRA is a project management software. Your team members can use JIRA to plan, track, and release effective software. You can create problem histories, plan sprints, and assign tasks to your teammates.
  short: Jira ticketing system

settings:
    fields:
      - name: jira_version
        caption: Jira Version
        type: list
        required: true
        values: []
      - type: displayfield
 
onBeforeInit: |  
  var values = jps.settings.fields[0].values;
  
  function getVersions(edition, url) {
      var body = toNative(new com.hivext.api.core.utils.Transport().get(url));
      var arr = eval(body.substring(10, body.length - 1)); 
      for (var i in arr) {
        if (arr[i].edition == edition && arr[i].platform == "Unix") {
          if (edition == "Standard") { 
          caption = "Latest";
          } else { 
          caption = "Long Term Support";
          jps.settings.fields[0]["default"] = arr[i].version;
          }
              values.push({ caption: arr[i].version+' '+'('+caption+')',value: arr[i].version }); 
      <!-- Use the arr[i].zipUrl to get URL to the application  -->    
          break;
        }
      }
  }

  getVersions("Standard",  "https://my.atlassian.com/download/feeds/current/jira-software.json");
  getVersions("Enterprise", "https://my.atlassian.com/download/feeds/archived/jira-software.json");

  if (values.length > 0) {  
    return jps;    
  } else {
    return {result: 1099, error:"can't determine latest or lts version", versions: values };
  }
  
onAfterBindSSL: setupProxy

globals:
  dbName: jiradb
  dbUser: jadmin
  dbPasswd: ${fn.password}
#server.xml is created from server.xml.j2 each time container restarted
  serverConfig: /opt/atlassian/etc/server.xml.j2
  protocol: https
  proxyPort: 443
  
ssl: true

nodes:

  - cloudlets: 4
    count: 1
    nodeGroup: bl
    nodeType: nginx
    extip: true
 
  - cloudlets: 12
    nodeGroup: sqldb
    nodeType: postgres10
    count: 1

  - cloudlets: 22
    nodeGroup: cp
    image: atlassian/jira-software:${settings.jira_version}
    env:
      ATL_JDBC_USER: ${globals.dbUser}
      ATL_JDBC_PASSWORD: ${globals.dbPasswd}
      ATL_DB_DRIVER: org.postgresql.Driver
      ATL_DB_TYPE: postgres72    
      ATL_DB_SCHEMA_NAME: public
      ATL_JDBC_URL: jdbc:postgresql://sqldb/${globals.dbName}
      ATL_PROXY_PORT: ${globals.proxyPort}
      ATL_TOMCAT_SCHEME: https
      ATL_TOMCAT_SECURE: true

onInstall:

  - script: /scripts/idna.js
  - setGlobals:
      DOMAIN: ${response.domain} 
  - install-LE-addon

  - createDB

  - cmd[cp]: |-
      sed -i "s|^\s*proxyName\=[^*]*|               proxyName\=\"${env.domain}\"|g" ${globals.serverConfig};
    user: root
          
  - restartContainers:
        nodeGroup: cp  
        
actions:
 
  createDB:
     - cmd[${nodes.sqldb.master.id}]: 
         psql -Uwebadmin postgres -c "CREATE DATABASE ${globals.dbName} WITH ENCODING 'UNICODE' LC_COLLATE 'C' LC_CTYPE 'C' TEMPLATE template0;"
         psql -Uwebadmin postgres -c "CREATE USER ${globals.dbUser} WITH ENCRYPTED PASSWORD '${globals.dbPasswd}' SUPERUSER;"
#         psql -Uwebadmin postgres -c "GRANT ALL PRIVILEGES ON DATABASE ${globals.dbName} TO ${globals.dbUser};"
  
  install-LE-addon:
    - install: https://github.com/jelastic-jps/lets-encrypt/blob/master/manifest.jps?_r=${fn.random}
      nodeGroup: bl
      skipEmail: false
      settings:
        customDomains: ${globals.DOMAIN}
        fallbackToX1: true

  setupProxy:
    - cmd[bl]: source /opt/letsencrypt/settings && echo $domain
    - set:
        domain: ${response.out}
    - cmd[cp]: |-
            sed -i "s|^\s*proxyName\=[^*]*|               proxyName\=\"${this.domain}\"|g" ${globals.serverConfig};
      user: root
    - restartContainers:
        nodeGroup: cp  
 
startPage: ${globals.protocol}://${env.domain}
  
success: /texts/success-w-db.md
