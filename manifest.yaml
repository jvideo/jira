type: install
appVersion: latest
id: jira-software
name: Jira Project & Issue Tracking System
logo: /images/jira-logo-new.png
baseUrl: https://raw.githubusercontent.com/vlobzakov/jira/master

categories:
- apps/dev-and-admin-tools

description:
  text: /texts/description.md
  short: Jira Ticketing System

 
onBeforeInit: |  
  var values = jps.settings.main.fields[0].values;

  function getVersions(edition, url) {
      var body = toNative(new com.hivext.api.core.utils.Transport().get(url));
      var arr = eval(body.substring(10, body.length - 1)); 
      
      for (var i in arr) {
        if (arr[i].edition == edition && arr[i].platform == "Unix") {
          if (edition == "Standard") { caption = "Latest" } else { caption = "Long Term Support" }
          values.push({ caption: caption, value: arr[i].zipUrl });            
          break;
        }
      }
  }
  
  getVersions("Standard",  "https://my.atlassian.com/download/feeds/current/jira-software.json");
  getVersions("Enterprise", "https://my.atlassian.com/download/feeds/archived/jira-software.json");

  if (values.length > 0) {  
    return jps;    
  } else {
    return {result: 1099, error:"can't determine latest or lts version", versions: values };
  }


settings:
  main:
    fields:
      - name: jira_url
        caption: Jira Version
        type: list
        required: true
        values: []
        hidden: false
      - type: displayfield
      - type: checkbox
        caption: External Database. Recommended for production mode.
        name: db
        value: true
        hideLabel: false
  config:
    fields:
      - name: displayfield
        type: displayfield
        hideLabel: true
        markup: Enter proxy parameters requested in Jira Admin Panel
      - name: scheme
        caption: scheme
        type: string
        default: https
        width: 250
      - name: proxy_name
        caption: proxyName
        type: string
        vtype: extdomain
        width: 250
      - name: proxy_port
        caption: proxyPort
        type: string
        default: 443
        width: 250

 
globals:
  DB_NAME: jiradb
  DB_USER: jadmin
  DB_PASSWD: ${fn.password}
  serverConfig: /opt/atlassian/jira/conf/server.xml
  server-proxy-https-config: https://raw.githubusercontent.com/vlobzakov/jira/master/jira-connector/server-proxy-https.xml

  
ssl: true

nodes:
- count: 1
  cloudlets: 24
  nodeType: javaengine
  nodeGroup: cp
  extip: false
  startService: false
  startServiceOnCreation: false
  addons: jira-config-update
- count: 1
  cloudlets: 4
  nodeGroup: bl
  nodeType: nginx
  extip: true

onInstall:
  - if ('${settings.db}' == 'true'): 
      - addDBnode
      - setGlobals:
          success: success-w-db.md
    elif ('${settings.db}' == 'false'): 
      - setGlobals:
          success: success-no-db.md
  - downloadJira
  - fontconfigInstall
  - setupJira
  - createDB
  - proxyConfigure
  - installAddon:
      id: jira-config-update
      nodeGroup: cp    
    
actions:
  addDBnode:
    - addNodes:
        cloudlets: 12
        nodeGroup: sqldb
        nodeType: postgresql
        count: 1
 
  downloadJira:
        cmd [cp]: |-
          wget -qO /home/jelastic/jira.bin ${settings.jira_url}
      
  fontconfigInstall:
    cmd [cp]: |-
      chmod a+x /home/jelastic/jira.bin
      yum install -y fontconfig
      yum install -y dejavu-sans-fonts
    user: root
     
  setupJira:
    cmd [cp]: |-
      exp_internal 1
      expect -c '
      spawn /home/jelastic/jira.bin
      expect "OK \[o, Enter\], Cancel \[c\]"
      send "o\r"
      expect "Express Install (use default settings) \[1\], Custom Install (recommended for advanced users) \[2, Enter\], Upgrade an existing Jira installation \[3\]" 
      send "1\r"
      expect "Install \[i, Enter\], Exit \[e\]"
      send "i\r"
      sleep 20
      expect "Yes \[y, Enter\], No \[n\]"
      send "y\r"
      sleep 10
      expect eof
      '
    user: root
  
  proxyConfigure:
    cmd[cp]:
      chmod a+w /opt/atlassian/jira/conf/server.xml
    user: root

  createDB:
     - cmd[${nodes.sqldb.master.id}]: 
         psql -Uwebadmin postgres -c "CREATE DATABASE ${globals.DB_NAME} WITH ENCODING 'UNICODE' LC_COLLATE 'C' LC_CTYPE 'C' TEMPLATE template0;"
         psql -Uwebadmin postgres -c "CREATE USER ${globals.DB_USER} WITH ENCRYPTED PASSWORD '${globals.DB_PASSWD}';"
         psql -Uwebadmin postgres -c "GRANT ALL PRIVILEGES ON DATABASE ${globals.DB_NAME} TO ${globals.DB_USER};"

addons:
  - id: jira-config-update
    name: Connector Configuration
    description: You can change connector partameters. 
    buttons:    
      - confirmText: Are you sure you want to proceed?
        loadingText: Jira Service Restart
        action: restartJira
        caption: Restart
        successText: Jira was restarted successfully!
        title: Please restart Jira Software if necessary
      - confirmText: Are you sure you want to proceed?
        loadingText: Changing parameters
        action: changeParams
        caption: Change
        successText: The parameters have been updated successfully!
        settings: config
        title: Please specify the new domain name 
        
    actions:
      changeParams:
        - cmd[cp]: |-
            chmod a+w ${globals.serverConfig};
            wget -qO ${globals.serverConfig} ${globals.server-proxy-https-config}
            sed -i 's/proxyName=\"[^\"+]*\"/proxyName=\"${settings.proxy_name}\"/' ${globals.serverConfig}
            sed -i 's/proxyPort=\"[^\"+]*\"/proxyPort=\"${settings.proxy_port}\"/' ${globals.serverConfig}
            sed -i 's/scheme=\"[^\"+]*\"/scheme=\"${settings.scheme}\"/' ${globals.serverConfig}
          user: root
        - restartJira
          
      restartJira:
        - cmd[cp]: |-
            runuser -l jira -c '/opt/atlassian/jira/bin/stop-jira.sh';
            sleep 10;
            runuser -l jira -c '/opt/atlassian/jira/bin/start-jira.sh';
          user: root
 

startPage: https://${env.domain}
  
success: /texts/${globals.success}
